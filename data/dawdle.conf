# Configuration file for the DawdleRPG bot.
#
# This is backwards-compatible with the IdleRPG bot's configuration.
# Some of the old directives are ignored.


# Basic configuration - you should set all these
################################################

# Remove this line so the bot knows you edited the file.
die

# Superuser that cannot be DELADMINed.
owner SETME

# Server name:port.
server example.com:6667

# Bot's nickname
botnick dawdlerpg

# Bot's username
botuser dawdlerpg

# Bot's real name
botrlnm DawdleRPG Bot

# Bot joins this channel
botchan #dawdlerpg

# Bot changes its modes to this on connection
botmodes +Bix

# Bot identifies itself with this command - %botpass% string is
# replaced by the BOTPASS environment variable.
# Commented out because it requires registration by the server.
# botident PRIVMSG NickServ :identify %botpass%

# Bot gains ops with this command after joining channel.  The channel
# name and bot nick are replaced with their configuration.
# Commented out because it requires registration by the server.
# botopcmd PRIVMSG ChanServ :op %botchan% %botnick%

# Bot sends this command to attempt to retrieve its nick.
# Commented out because it requires registration by the server.
# botghostcmd PRIVMSG NickServ :ghost %botnick% %botpass%

# URL that shows up in the help command output.
helpurl http://example.com/

# URL where admins can find help.
admincommurl http://example.com/admincomms.txt

# URL where users can reach the online quest map, if available.
mapurl http://example.com/quest.php

# Daemonize the bot.  This will make the bot detach from the terminal
# and act as an independent server.  If you are running this from a
# command line or an init script, this should be on.  If you are
# running it from systemd or some other service manager, this should
# probably be off.
daemonize on

# Gameplay configuration - you might want to tweak these.
#########################################################

# Base amount of time to level.
rpbase 600

# Time to next level is rpbase * (rpstep ** current level)
rpstep 1.16

# Penalty time = penalty * (rppenstep ** current level)
rppenstep 1.14

# Allow non-admin users to access info command.
allowuserinfo on

# Time penalty limit.
limitpen 24192200

# Width of map.
mapx 500

# Height of map.
mapy 500

# Kick/ban users who mention a URL within seconds of joining channel.
doban on

# These are URL hosts which are okay to mention early in channel.  Multiples are fine.
# okurl example.com
# okurl example.org

# Write quest file to be picked up from the website.
writequestfile on

# Voice users on login.
voiceonlogin on

# Allow users to view information on another user?
statuscmd on

# Disallow registration of filenames existing in a different case?
casematters on

# Detect netsplits.  Servers are supposed to disallow netsplit-like
# messages, so this shouldn't be a cheat vector.
detectsplits on

# Time to wait after netsplit for disconnection.
splitwait 10m


# Technical details
###################

# Directory to look for game files.  This is set to this configuration
# file's directory by default.  Uncomment if you need to specify it.
# datadir <data directory>

# Filename for player database.
dbfile dawdle.db

# Filename for events file.
eventsfile events.txt

# Filename for quest file.  Used by website.
questfilename questinfo.txt

# Game events are saved to this filename. Used by website.
modsfile modifiers.txt

# Turn debugging mode on.  This will keep the bot from daemonizing and
# send logging output to stderr.
debug off

# Filename for logging status.
logfile dawdle.log

# Loglevel for emitting to logfile - levels are CRITICAL, WARNING,
# INFO, DEBUG, and SPAMMY
loglevel INFO

# PID file for ensuring that dawdlerpg isn't running twice.
pidfile dawdle.pid

# Backup directory
backupdir backups

# Does the bot reconnect when disconnected?
reconnect on

# How long to wait after disconnection to reconnect.
reconnect_wait 30s

# Address to use for outgoing connection.  This is used to select a
# specific interface.  Uses default interface when unset.
# localaddr <local address>

# Interval in seconds to check for game events.
self_clock 1s
